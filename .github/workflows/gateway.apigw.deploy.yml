name: "1. Deploy API-Gateways (M)"

env:
  dockerRegistry: ghcr.io
  dockerRepository: cwiechmann/axway-api-management-automated
  baseImage: "base:77-20220228-1"
  outImage: "manager"
  outImageVersion: "77-20220228-1"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version or Date is attached to the created image'
        required: true
        type: string 
      deploy_apimgr:
        description: 'Deploy API-Manager'
        required: false
        default: true
        type: boolean 
      deploy_apigw:
        description: 'Deploy API-Gateways'
        required: false
        default: true
        type: boolean 

defaults:
  run:
    working-directory: gateway-config

jobs:
  create-apigw-docker-image:
    name: Create API-Gateway image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.dockerRegistry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set image version
        run: >-
          printenv
          exit 9
      - name: Pull base image
        run: docker pull ${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.baseImage }}
      - name: Build API-Gateway image
        run: |
          tar xvfz apigw-emt-scripts-2.4.0-20220222.150412-10.tar.gz
          echo "${{ secrets.APIGATEWAY_LICENSE }}" | base64 -d > license.lic
          ./apigw-emt-scripts-2.4.0-SNAPSHOT/build_gw_image.py --license=license.lic --merge-dir apigateway/merge-dir/apigateway --default-cert --fed=apigateway/fed/apigateway.fed --parent-image=${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.baseImage }} --out-image=${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.outImage }}:${{ env.outImageVersion}}-${{ github.event.inputs.version }}
      - name: Push image
        run: |
          docker push ${{ env.dockerRegistry }}/${{ env.dockerRepository }}/${{ env.outImage }}:${{ env.outImageVersion}}-${{ github.event.inputs.version }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Helm upgrade
        run: |
          mkdir  $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          helm upgrade axway-apim -n apim --set traffic.imageTag=${{ github.event.inputs.version }} --set apigateway.imageTag=${{ github.event.inputs.version }} -f ../helm/aws-eks/axway-apim-on-aws-eks-values.yaml https://github.com/Axway/Cloud-Automation/releases/download/apim-helm-v2.7.0/helm-chart-axway-apim-2.7.0.tgz

